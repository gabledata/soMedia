from django.conf import settings as C
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations as B,models as A
import django.db.models.deletion
import django.utils.timezone
class D(B.Migration):initial=True;dependencies=[('auth','0009_alter_user_last_name_max_length')];operations=[B.CreateModel(name='User',fields=[('id',A.AutoField(auto_created=True,primary_key=True,serialize=False,verbose_name='ID')),('password',A.CharField(max_length=128,verbose_name='password')),('last_login',A.DateTimeField(blank=True,null=True,verbose_name='last login')),('is_superuser',A.BooleanField(default=False,help_text='Designates that this user has all permissions without explicitly assigning them.',verbose_name='superuser status')),('username',A.CharField(error_messages={'unique':'A user with that username already exists.'},help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.',max_length=150,unique=True,validators=[django.contrib.auth.validators.UnicodeUsernameValidator()],verbose_name='username')),('first_name',A.CharField(blank=True,max_length=30,verbose_name='first name')),('last_name',A.CharField(blank=True,max_length=150,verbose_name='last name')),('email',A.EmailField(blank=True,max_length=254,verbose_name='email address')),('is_staff',A.BooleanField(default=False,help_text='Designates whether the user can log into this admin site.',verbose_name='staff status')),('is_active',A.BooleanField(default=True,help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.',verbose_name='active')),('date_joined',A.DateTimeField(default=django.utils.timezone.now,verbose_name='date joined')),('followers',A.ManyToManyField(blank=True,related_name='_user_followers_+',to=C.AUTH_USER_MODEL)),('groups',A.ManyToManyField(blank=True,help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',related_name='user_set',related_query_name='user',to='auth.Group',verbose_name='groups')),('user_permissions',A.ManyToManyField(blank=True,help_text='Specific permissions for this user.',related_name='user_set',related_query_name='user',to='auth.Permission',verbose_name='user permissions'))],options={'verbose_name':'user','verbose_name_plural':'users','abstract':False},managers=[('objects',django.contrib.auth.models.UserManager())]),B.CreateModel(name='UserProfile',fields=[('id',A.AutoField(auto_created=True,primary_key=True,serialize=False,verbose_name='ID')),('picture',A.ImageField(blank=True,null=True,upload_to='profile_pictures')),('website',A.URLField(blank=True)),('bio',A.TextField(blank=True)),('phone',A.CharField(blank=True,max_length=11)),('address',A.CharField(blank=True,max_length=100)),('user',A.OneToOneField(on_delete=django.db.models.deletion.CASCADE,related_name='profile',to=C.AUTH_USER_MODEL,verbose_name='other Details'))])]